image: ridibooks/gitlab-ci-docker-aws:1.6.0

stages:
  - test
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

.install:
  before_script:
    - yarn install

.test-template:
  stage: test
  extends: .install

test:jest:
  stage: test
  extends: .test-template
  script:
    - yarn test
  after_script:
    - ./node_modules/.bin/codecov

.deploy-template:
  stage: deploy
  extends: .install
  script: yarn build

deploy-development:
  extends: .deploy-template
  variables:
    ENVIRONMENT: 'development'
    AWS_ACCESS_KEY_ID: $DEV_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $DEV_AWS_SECRET_ACCESS_KEY
    CDN_URL: $DEV_CDN_URL
    STATIC_CDN_DISTRIBUTION_ID: $DEV_STATIC_CDN_DISTRIBUTION_ID
    LAMBDA_CDN_DISTRIBUTION_ID: $DEV_CDN_DISTRIBUTION_ID
  script:
    - env | awk '/CDN_URL|ENVIRONMENT|SENTRY_DSN/' >> .env
    - ./node_modules/.bin/serverless config credentials --provider aws --key $AWS_ACCESS_KEY_ID
      --secret $AWS_SECRET_ACCESS_KEY
    - yarn deploy
    - aws cloudfront create-invalidation --distribution-id $LAMBDA_CDN_DISTRIBUTION_ID --paths "/*"
    - aws cloudfront create-invalidation --distribution-id $STATIC_CDN_DISTRIBUTION_ID --paths "/*"

deploy-staging:
  extends: .deploy-template
  when: manual
  variables:
    ENVIRONMENT: 'staging'
    AWS_ACCESS_KEY_ID: $STAGING_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $STAGING_AWS_SECRET_ACCESS_KEY
    CDN_URL: $DEV_CDN_URL
  script:
    - serverless config credentials --provider aws --key $AWS_ACCESS_KEY_ID --secret
      $AWS_SECRET_ACCESS_KEY
# sls deploy

deploy-production:
  extends: .deploy-template
  when: manual
  variables:
    ENVIRONMENT: 'production'
    AWS_ACCESS_KEY_ID: $PRODUCTION_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $PRODUCTION_AWS_SECRET_ACCESS_KEY
    CDN_URL: $DEV_CDN_URL
  script:
    - serverless config credentials --provider aws --key $AWS_ACCESS_KEY_ID --secret
      $AWS_SECRET_ACCESS_KEY
# sls deploy
