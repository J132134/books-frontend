image: ridibooks/gitlab-ci-docker-aws:1.6.0

stages:
  - test
  - build
  - deploy
  - e2e

variables:
  npm_config_cache: /builds/store/web-test/.npm
  CYPRESS_CACHE_FOLDER: /builds/store/web-test/cache/Cypress

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .npm
    - cache/Cypress
    - node_modules

.install:
  before_script:
    - yarn install

.test-template:
  stage: test
  extends: .install

test:jest:
  stage: test
  extends: .test-template
  script:
    - yarn test
  after_script:
    - ./node_modules/.bin/codecov

# 배포 관련 브랜치가 아닌 Feature 브랜치에서 진행하는 스테이지
build:
  stage: build
  variables:
    ENVIRONMENT: 'local'
  except:
    - master
    - development
    - staging
  script:
    - yarn build src

.deploy-template:
  stage: deploy
  extends: .install
  script: yarn build

deploy-development:
  extends: .deploy-template
  only:
    - development
    - merge_request
  variables:
    ENVIRONMENT: 'development'
    AWS_ACCESS_KEY_ID: $DEV_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $DEV_AWS_SECRET_ACCESS_KEY
    CDN_URL: $DEV_CDN_URL
    STATIC_CDN_DISTRIBUTION_ID: $DEV_STATIC_CDN_DISTRIBUTION_ID
    LAMBDA_CDN_DISTRIBUTION_ID: $DEV_CDN_DISTRIBUTION_ID
  script:
    - env | awk '/CDN_URL|ENVIRONMENT|SENTRY_DSN/' >> .env
    - ./node_modules/.bin/serverless config credentials --provider aws --key $AWS_ACCESS_KEY_ID
      --secret $AWS_SECRET_ACCESS_KEY
    - yarn deploy
    - aws cloudfront create-invalidation --distribution-id $LAMBDA_CDN_DISTRIBUTION_ID --paths "/*"
    - aws cloudfront create-invalidation --distribution-id $STATIC_CDN_DISTRIBUTION_ID --paths "/*"

deploy-staging:
  extends: .deploy-template
  only:
    - staging
    - merge_request
  when: manual
  variables:
    ENVIRONMENT: 'staging'
    AWS_ACCESS_KEY_ID: $STAGING_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $STAGING_AWS_SECRET_ACCESS_KEY
    CDN_URL: $DEV_CDN_URL
  script:
    - serverless config credentials --provider aws --key $AWS_ACCESS_KEY_ID --secret
      $AWS_SECRET_ACCESS_KEY
# sls deploy

deploy-production:
  extends: .deploy-template
  only:
    - master
    - merge_request
  when: manual
  variables:
    ENVIRONMENT: 'production'
    AWS_ACCESS_KEY_ID: $PRODUCTION_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $PRODUCTION_AWS_SECRET_ACCESS_KEY
    CDN_URL: $DEV_CDN_URL
  script:
    - serverless config credentials --provider aws --key $AWS_ACCESS_KEY_ID --secret
      $AWS_SECRET_ACCESS_KEY
# sls deploy

.e2e:
  image: cypress/base:10
  stage: e2e
  before_script:
    - yarn add cypress
    - ./node_modules/.bin/cypress verify
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - cypress/screenshots
      - cypress/videos

e2e-development:
  extends: .e2e
  when: manual
  variables:
    CYPRESS_BASE_URL: https://web-dev.crying.dance
  script:
    - ./node_modules/.bin/cypress run
#  only:
#    - development

e2e-staging:
  extends: .e2e
  when: manual
  variables:
    CYPRESS_BASE_URL: https://web-staging.crying.dance
  script:
    - ./node_modules/.bin/cypress run
#  only:
#    - development

e2e-production:
  extends: .e2e
  when: manual
  variables:
    CYPRESS_BASE_URL: https://web-production.crying.dance
  script:
    - ./node_modules/.bin/cypress run
#  only:
#    - development

